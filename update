#!/bin/bash

# set the permission for the battery charging parameters
chmod 0755 /sys/class/power_supply/battery/{step_charging_enabled,sw_jeita_enabled,battery_charging_enabled,subsystem/usb/pd_active,charger_temp}

# enable step charging
echo 1 > /sys/class/power_supply/battery/step_charging_enabled

# enable software jeita
echo 1 > /sys/class/power_supply/battery/sw_jeita_enabled

# enable battery charging
echo 1 > /sys/class/power_supply/battery/battery_charging_enabled

# disable PD charging
echo 0 > /sys/class/power_supply/battery/subsystem/usb/pd_active

# set the charger temperature
echo 470 > /sys/class/power_supply/battery/charger_temp

# disable charging restrictions
echo 0 > /sys/class/qcom-battery/restrict_chg

# disable sleep mode
echo Y > /sys/module/lpm_levels/parameters/sleep_disabled

# set the permission back to read-only
chmod 0644 /sys/class/power_supply/battery/{step_charging_enabled,sw_jeita_enabled,battery_charging_enabled,subsystem/usb/pd_active,charger_temp}

echo "N" > /sys/module/sync/parameters/fsync_enabled

for block_device in sda sdb sdc sdd; do
echo 0 > "/sys/block/$block_device/queue/iosched/low_latency"
done

echo 8192 > /sys/block/sda/queue/read_ahead_kb

echo 40 > /proc/sys/vm/dirty_ratio

mkdir -p /data/adb/modules/GT_STABLE/common/unityfiles

for app in com.samsung.android.game.gos com.miui.daemon com.xiaomi.joyose ch.gridvision.ppam.androidautomagic; do
pm disable "$app" >/dev/null 2>&1
pm uninstall --user 0 "$app" >/dev/null 2>&1
done

if [ -e "/proc/sys/kernel/sched_lib_mask_force" ] && [ -e "/proc/sys/kernel/sched_lib_name" ]; then
echo "com.miHoYo.,com.tencent.,com.ngame.,com.pubg.,com.ea.gp.,com.netease.,com.riotgames.,com.ea.game.,UnityMain,libunity.so" > "/proc/sys/kernel/sched_lib_name"
echo "255" > "/proc/sys/kernel/sched_lib_mask_force"
fi

chmod 777 /sys/devices/system/cpu/cpu0/cpufreq/scaling_governor
echo "performance" > /sys/devices/system/cpu/cpu0/cpufreq/scaling_governor

for sysfs in /sys/devices/system/cpu/cpufreq/performance/go_hispeed_load /sys/devices/system/cpu/cpufreq/performance/above_hispeed_delay /sys/devices/system/cpu/cpufreq/performance/boost; do
chmod 777 "$sysfs"
done

echo "75" > /sys/devices/system/cpu/cpufreq/performance/go_hispeed_load
echo "0" > /sys/devices/system/cpu/cpufreq/performance/above_hispeed_delay

# Disable fsync to improve file write performance
echo N > /sys/module/sync/parameters/fsync_enabled

# Set low_latency to 0 for all storage devices to reduce disk access latency
for dev in sda sdb sdc sdd; do
  echo 0 > /sys/block/$dev/queue/iosched/low_latency
done

# Set read_ahead_kb to 8192 to increase disk read performance
echo 8192 > /sys/block/sda/queue/read_ahead_kb

# Set dirty_ratio to 40 to improve memory management
echo 40 > /proc/sys/vm/dirty_ratio

# Disable Samsung Game Services to improve overall performance
pm disable com.samsung.android.game.gos >/dev/null 2>&1

# Uninstall Xiaomi services to reduce background processes
for pkg in com.miui.daemon com.xiaomi.joyose ch.gridvision.ppam.androidautomagic; do
  pm uninstall --user 0 $pkg >/dev/null 2>&1
done

# Blacklist scheduler libs for selected applications to reduce overhead
if [ -e "/proc/sys/kernel/sched_lib_mask_force" ] && [ -e "/proc/sys/kernel/sched_lib_name" ]; then
  echo "com.miHoYo.,com.tencent.,com.ngame.,com.pubg.,com.ea.gp.,com.netease.,com.riotgames.,com.ea.game.,UnityMain,libunity.so" >"/proc/sys/kernel/sched_lib_name"
  echo "255" >"/proc/sys/kernel/sched_lib_mask_force"
fi

# Create common directory for GT_STABLE modules
mkdir -p /data/adb/modules/GT_STABLE/common/unityfiles

# Set CPU scaling governor to performance for maximum performance
echo performance > /sys/devices/system/cpu/cpu0/cpufreq/scaling_governor
echo 75 > /sys/devices/system/cpu/cpufreq/performance/go_hispeed_load
echo 0 > /sys/devices/system/cpu/cpufreq/performance/above_hispeed_delay
echo 1 > /sys/devices/system/cpu/cpufreq/performance/boost

# Enable touchboost for improved touch performance
echo 1 > /sys/module/msm_performance/parameters/touchboost

# Set max frequency hysteresis for improved performance and battery life
echo 1 > /sys/devices/system/cpu/cpufreq/performance/max_freq_hysteresis

# Align CPU windows for improved performance
echo 1 > /sys/devices/system/cpu/cpufreq/performance/align_windows

# Set GPU governor to performance for maximum performance
echo performance > /sys/devices/soc/1c00000.qcom,kgsl-3d0/devfreq/1c00000.qcom,kgsl-3d0/governor
echo msm-adreno-tz > /sys/class/kgsl/kgsl-3d0/devfreq/governor 
echo '0' > /sys/module/adreno_idler/parameters/adreno_idler_activeecho 0 > /sys/module/

echo '8' > /sys/module/lazyplug/parameters/nr_possible_cores

chmod 777 /dev/cpuset/*/cpus
chmod 777 /dev/cpuset/*/boost/cpus


echo '0-7' > /dev/cpuset/foreground/cpus
echo '0-7' > /dev/cpuset/foreground/boost/cpus
echo '0-7' > /dev/cpuset/top-app/cpus
echo '0-7' > /dev/cpuset/top-app/boost/cpus
echo '0-7' > /dev/cpuset/background/cpus
echo '0-7' > /dev/cpuset/background/boost/cpus

setprop ro.vendor.qti.config.zram true

swapon /dev/block/vnswap0
swapon /dev/block/zram0
swapon /dev/block/vbswap0

echo "1" > /sys/block/vnswap0/reset
echo "8589934592" > /sys/block/vnswap0/disksize
echo "8192M" > /sys/block/vnswap0/mem_limit
echo "8" > /sys/block/vnswap0/max_comp_streams

mkswap /dev/block/vnswap0
swapon /dev/block/vnswap0 -p 32758

echo "100" > /proc/sys/vm/swappiness
echo "15" > /proc/sys/vm/dirty_background_ratio
echo "200" > /proc/sys/vm/vfs_cache_pressure
echo "3000" > /proc/sys/vm/dirty_writeback_centisecs

echo '3' > /proc/sys/vm/drop_caches

echo '0' > /proc/sys/vm/oom_kill_allocating_task

echo "256,10240,32000,34000,36000,38000" > /sys/module/lowmemorykiller/parameters/minfree
cat /sys/module/lowmemorykiller/parameters/minfree

echo 0 > /proc/sys/net/ipv4/tcp_timestamps
echo 1 > /proc/sys/net/ipv4/tcp_tw_reuse
echo 1 > /proc/sys/net/ipv4/tcp_sack
echo 1 > /proc/sys/net/ipv4/tcp_tw_recycle
echo 1 > /proc/sys/net/ipv4/tcp_window_scaling
echo 5 > /proc/sys/net/ipv4/tcp_keepalive_probes
echo 30 > /proc/sys/net/ipv4/tcp_keepalive_intvl
echo 30 > /proc/sys/net/ipv4/tcp_fin_timeout
echo 404480 > /proc/sys/net/core/wmem_max
echo 404480 > /proc/sys/net/core/rmem_max
echo 256960 > /proc/sys/net/core/rmem_default
echo 256960 > /proc/sys/net/core/wmem_default
echo 4096,16384,404480 > /proc/sys/net/ipv4/tcp_wmem
echo 4096,87380,404480 > /proc/sys/net/ipv4/tcp_rmem

echo 1 > /sys/block/vbswap0/reset
echo 8589934592 > /sys/block/vbswap0/disksize
echo 8192M > /sys/block/vbswap0/mem_limit
echo 8 > /sys/block/vbswap0/max_comp_streams
mkswap /dev/block/vbswap0
swapon /dev/block/vbswap0 -p 32758
echo 100 > /proc/sys/vm/swappiness
echo 15 > /proc/sys/vm/dirty_background_ratio
echo 200 > /proc/sys/vm/vfs_cache_pressure
echo 3000 > /proc/sys/vm/dirty_writeback_centisecs
echo 3 > /proc/sys/vm/drop_caches
echo 0 > /proc/sys/vm/oom_kill_allocating_task
echo 256,10240,32000,34000,36000,38000 > /sys/module/lowmemorykiller/parameters/minfree
cat /sys/module/lowmemorykiller/parameters/minfree

Swap
swapon /dev/block/vnswap0 -p 32758
swapon /dev/block/zram0 -p 32758
swapon /dev/block/vbswap0 -p 32758
echo 0 > /proc/sys/vm/page-cluster 0
echo 4 > /sys/block/zram0/max_comp_streams 4

Common modules
modpath="/data/adb/modules/GT_STABLE/"
sh "${modpath}common/unityfiles/addon.sh"
sh "${modpath}common/unityfiles/util_functions.sh"


sqlite_log="/sdcard/GT SQL"


[[ ! -e "$sqlite_log" ]] && touch "$sqlite_log"

[[ "$(command -v sqlite3)" ]] && [[ ! -f "$(pwd)/sqlite3_opt_done" ]] && {
	for i in $(find / -iname *.db); do
		sqlite3 "$i" 'VACUUM;'

		resVac=$?

		[[ "$resVac" == "0" ]] && resVac="SUCCESS" || resVac="FAILED(ERRCODE)-$resVac"

		sqlite3 "$i" 'REINDEX;'

		resIndex=$?

		[[ "$resIndex" == "0" ]] && resIndex="SUCCESS" || resIndex="FAILED(ERRCODE)-$resIndex"

		sqlite3 "$i" 'ANALYZE;'

		resAnlz=$?

		[[ "$resAnlz" == "0" ]] && resAnlz="SUCCESS" || resAnlz="FAILED(ERRCODE)-$resAnlz"

		echo "Database $i: VACUUM=$resVac REINDEX=$resIndex ANALYZE=$resAnlz" >>"$sqlite_log"
		echo "Done!" >"$(pwd)/sqlite3_opt_done"
	done
} || [[ ! "$(command -v sqlite3)" ]] && echo "[!] SQLite3 ไปติดตั้งซะ" >"$sqlite_log"

cmd package uninstall --user 0 com.xiaomi.joyose


#!/system/bin/sh

maybe_set_prop() {
    local prop="$1"
    local contains="$2"
    local value="$3"

    # Use quotes around variables to prevent unexpected behavior when they contain whitespaces
    if [[ "$(getprop "$prop")" == *"$contains"* ]]; then
        resetprop "$prop" "$value"
    fi
}

# Magisk recovery mode
maybe_set_prop ro.bootmode recovery unknown
maybe_set_prop ro.boot.mode recovery unknown
maybe_set_prop vendor.boot.mode recovery unknown

# MIUI cross-region flash
maybe_set_prop ro.boot.hwc CN GLOBAL
maybe_set_prop ro.boot.hwcountry China GLOBAL

resetprop --delete ro.build.selinux

# SELinux permissive
if [[ "$(cat /sys/fs/selinux/enforce)" == "0" ]]; then
    # Make sure the script has the necessary permissions to change the file
    chmod 640 /sys/fs/selinux/enforce
    chmod 440 /sys/fs/selinux/policy
fi

# Late props which must be set after boot_completed
{
    until [[ "$(getprop sys.boot_completed)" == "1" ]]; do
        sleep 1
    done

    # Avoid breaking Realme fingerprint scanners
    resetprop ro.boot.flash.locked 1

    # Avoid breaking Oppo fingerprint scanners
    resetprop ro.boot.vbmeta.device_state locked

    # Avoid breaking OnePlus display modes/fingerprint scanners
    resetprop vendor.boot.verifiedbootstate green
} &

# Wait for boot to be completed
until [[ "$(getprop sys.boot_completed)" -eq "1" ]] || [[ "$(getprop dev.bootcomplete)" -eq "1" ]]; do
    sleep 1
done
